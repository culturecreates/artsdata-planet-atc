name: Fetch and Push ATC entities

on:
  workflow_dispatch:
  schedule:
    - cron: '0 4 2 * *'

jobs:
  process-using-ontorefine:
    runs-on: ubuntu-latest
    container:
      image: ontotext/refine:1.2.1
      options: --user root
      ports:
        - 7333:7333
    steps:
      - name: Install requirements
        run: apk update && apk add curl && apk add util-linux && apk add jq

      - name: Run ontorefine server
        run: /opt/ontorefine/dist/bin/ontorefine &

      - name: Fetch entities
        shell: bash
        run: |
          mkdir -p outputs

          declare -A source_map=(
            ["artist"]="artists"
            ["network"]="networks"
            ["presenter"]="presenters"
            ["performance-space"]="performance-spaces"
            ["representative"]="representatives"
            ["show"]="shows"
            ["tour-booking"]="tour-bookings"
            ["genre"]="genres"
            ["category"]="categories"
          )
          for source in "${!source_map[@]}"; do
            file_name=${source_map[$source]}
            offset=0
            data=""
            while true; do
              echo "Fetching ${file_name} with offset $offset"
              response=$(curl -s "https://test-block-booking.pantheonsite.io/api/$source?page%5Boffset%5D=$offset" --header "Authorization: basic ${{secrets.API_KEY}}")
              # Checking if data is empty
              if [ "$(echo $response | jq '.data | length')" -eq 0 ]; then 
                echo "No more data for $source"
                break
              fi
              # Flattening the data
              data=$(jq -s '[.[][]]' <<<"$data $(echo $response | jq '.data')")
              offset=$((offset + 50))
            done

            echo "{\"data\":$data}" > ${source}.json

            curl "https://raw.githubusercontent.com/${{github.repository}}/${{github.ref}}/ontorefine/configs/ontorefine-config-${file_name}.json" >> config-${source}.json

            /opt/ontorefine/dist/bin/ontorefine-cli \
            transform ${source}.json \
            -u http://localhost:7333 \
            --configurations config-${source}.json \
            -f json >> outputs/${file_name}.ttl
          done

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
            name: ttl-file
            path: outputs/

  commit-and-push:
    runs-on: ubuntu-latest
    needs: process-using-ontorefine
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Download artifacts
        id: download-step
        uses: actions/download-artifact@v4
        with:
            name: ttl-file
            path: outputs/

      - name: Commit files to GitHub
        run: |
            git pull
            git config --global user.email "actions@github.com"
            git config --global user.name "GitHub Actions"
            git add "outputs/"
            git commit -m "Push Entities from ATC"
            git push

  artsdata-push:
    runs-on: ubuntu-latest
    needs: commit-and-push
    strategy:
      matrix:
        artifact: ["artists", "networks", "presenters", "performance-spaces", "representatives", "shows", "tour-bookings", "genres", "categories"]
    steps:
      - name: Action setup
        uses: culturecreates/artsdata-pipeline-action@v2
        with:
            artifact: ${{ matrix.artifact }}
            publisher: "${{ secrets.PUBLISHER_URI_GREGORY }}"
            downloadUrl: https://raw.githubusercontent.com/${{github.repository}}/${{github.ref}}/outputs/${{ matrix.artifact }}.ttl

